function[0] top-level {
  Entry[-1] -> [0]

  Block[0] -> [1], ExitExc
    [0] noop(StartOfFile)
    [1] <>obj<>1 := collection
    [2] <>iterator<>2 := @iteratorInit(<>obj<>1) @ #1
    [3] <>cond1<>3 := @iteratorHasNext(<>obj<>1, <>iterator<>2)

  LoopHead[1] -> [3], [2]

  Block[2] -> [4], ExitExc
    [0] assert(<>cond1<>3)
    [1] <>key<>4 := @iteratorNext(<>obj<>1, <>iterator<>2)
    [2] x := <>key<>4

  Block[3] -> [5], ExitExc
    [0] assert(! <>cond1<>3)
    [1] merge(1)

  LCont[4] -> [1]
    [0] <>cond1<>3 := @iteratorHasNext(<>obj<>1, <>iterator<>2)
    [1] merge(1)

  LBreak[5] -> [6], ExitExc
    [0] y := undefined
    [1] <>obj<>5 := collection
    [2] <>iterator<>6 := @iteratorInit(<>obj<>5) @ #2
    [3] <>cond1<>7 := @iteratorHasNext(<>obj<>5, <>iterator<>6)

  LoopHead[6] -> [8], [7]

  Block[7] -> [9], ExitExc
    [0] assert(<>cond1<>7)
    [1] <>key<>8 := @iteratorNext(<>obj<>5, <>iterator<>6)
    [2] y := <>key<>8

  Block[8] -> [10], ExitExc
    [0] assert(! <>cond1<>7)
    [1] merge(6)

  LCont[9] -> [6]
    [0] <>cond1<>7 := @iteratorHasNext(<>obj<>5, <>iterator<>6)
    [1] merge(6)

  LBreak[10] -> [11]

  LoopHead[11] -> [13], [12]

  Block[12] -> [14], ExitExc
    [0] assert(z < 5)

  Block[13] -> [15], ExitExc
    [0] assert(! z < 5)
    [1] merge(11)

  LCont[14] -> [11], ExitExc
    [0] <>old<>9 := z
    [1] <>new<>10 := @ToNumber(<>old<>9)
    [2] z := <>new<>10 + 1
    [3] <>Global<>ignore3 := <>new<>10
    [4] merge(11)

  LBreak[15] -> [16], ExitExc
    [0] v := 0

  LoopHead[16] -> [18], [17]

  Block[17] -> [19], ExitExc
    [0] assert(v < 3)

  Block[18] -> [20], ExitExc
    [0] assert(! v < 3)
    [1] merge(16)

  LCont[19] -> [16], ExitExc
    [0] <>old<>11 := v
    [1] <>new<>12 := @ToNumber(<>old<>11)
    [2] v := <>new<>12 + 1
    [3] <>Global<>ignore6 := <>new<>12
    [4] merge(16)

  LBreak[20] -> Exit
    [0] noop(EndOfFile)

  Exit[-2]

  ExitExc[-3]

}

